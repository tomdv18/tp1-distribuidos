services:
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    ports:
    - 15672:15672
    healthcheck:
      test:
      - CMD
      - rabbitmqctl
      - status
      interval: 10s
      timeout: 5s
      retries: 5
  gateway:
    build:
      context: .
      dockerfile: gateway/gateway.dockerfile
    restart: on-failure
    environment:
    - PYTHONUNBUFFERED=1
    - EOF=5
    depends_on:
      filter_spain_argentina_1:
        condition: service_started
      filter_spain_argentina_2:
        condition: service_started
      filter_one_prod_1:
        condition: service_started
      filter_one_prod_2:
        condition: service_started
      filter_argentina_1:
        condition: service_started
      filter_argentina_2:
        condition: service_started
      #overview_1:
      #  condition: service_healthy
      #overview_2:
      #  condition: service_healthy
      rabbitmq:
        condition: service_healthy
  #model_downloader:
  #  build:
  #    context: ./model_downloader
  #    dockerfile: model_downloader.dockerfile
  #  volumes:
  #  - ./model_downloader/model_volume:/models
  #average_budget:
  #  build:
  #    context: .
  #    dockerfile: generic/average_budget/generic.dockerfile
  #  restart: on-failure
  #  depends_on:
  #    rabbitmq:
  #      condition: service_healthy
  #  environment:
  #  - PYTHONUNBUFFERED=1
  #  - BINDS=0,1,2,3,4,5,6,7,8,9
  #  - CONSUMER_EXCHANGE=overview
  #  - PUBLISHER_EXCHANGE=results
  #  - NODE_ID=average_budget
  top_budget:
    build:
      context: .
      dockerfile: generic/top_budget/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4,5,6,7,8,9
    - CONSUMER_EXCHANGE=filter_one_prod
    - PUBLISHER_EXCHANGE=results
    - NODE_ID=top_budget
  client_1:
    build:
      context: .
      dockerfile: client/client.dockerfile
    depends_on:
      gateway:
        condition: service_started
    volumes:
    - ./client/files:/app/files
    environment:
    - PYTHONUNBUFFERED=1
    - MOVIES_FILE=movies_metadata.csv
    - RATINGS_FILE=ratings_39999_lines.csv
    - CREDITS_FILE=mini_credits.csv
  client_2:
    build:
      context: .
      dockerfile: client/client.dockerfile
    depends_on:
      gateway:
        condition: service_started
    volumes:
    - ./client/files:/app/files
    environment:
    - PYTHONUNBUFFERED=1
    - MOVIES_FILE=movies_metadata.csv
    - RATINGS_FILE=ratings_39999_lines.csv
    - CREDITS_FILE=mini_credits.csv
  filter_spain_argentina_1:
    build:
      context: .
      dockerfile: filter/filter_spain_argentina/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter_years_2000_q1_1:
        condition: service_started
      filter_years_2000_q1_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=filter_spain_argentina_1
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_spain_argentina
  filter_spain_argentina_2:
    build:
      context: .
      dockerfile: filter/filter_spain_argentina/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter_years_2000_q1_1:
        condition: service_started
      filter_years_2000_q1_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=filter_spain_argentina_2
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_spain_argentina
  filter_years_2000_q1_1:
    build:
      context: .
      dockerfile: filter/filter_years_2000_q1/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=filter_years_2000_q1_1
    - CONSUMER_EXCHANGE=filter_spain_argentina
    - PUBLISHER_EXCHANGE=results
  filter_years_2000_q1_2:
    build:
      context: .
      dockerfile: filter/filter_years_2000_q1/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=filter_years_2000_q1_2
    - CONSUMER_EXCHANGE=filter_spain_argentina
    - PUBLISHER_EXCHANGE=results
  filter_one_prod_1:
    build:
      context: .
      dockerfile: filter/filter_one_prod/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      top_budget:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=filter_one_prod_1
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_one_prod
  filter_one_prod_2:
    build:
      context: .
      dockerfile: filter/filter_one_prod/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      top_budget:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=filter_one_prod_2
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_one_prod
  ##overview_1:
  ##  build:
  #    context: .
  #    dockerfile: generic/overview_processor/generic.dockerfile
  #  restart: on-failure
  #  depends_on:
  #    rabbitmq:
  #      condition: service_healthy
  #    average_budget:
  #      condition: service_started
  #    model_downloader:
  #      condition: service_completed_successfully
  #  environment:
  #  - PYTHONUNBUFFERED=1
  #  - BINDS=0,1,2,3,4
  #  - NODE_ID=overview_1
  #  - CONSUMER_EXCHANGE=gateway_metadata
  #  - PUBLISHER_EXCHANGE=overview
  #  links:
  #  - rabbitmq
  #  volumes:
  #  - ./model_downloader/model_volume:/models
  #  healthcheck:
  #    test:
  #    - CMD
  #    - test
  #    - -f
  #    - /tmp/model_ready
  #    interval: 5s
  #    timeout: 3s
  #    retries: 10
  #    start_period: 15s
  #overview_2:
  #  build:
  #    context: .
  #    dockerfile: generic/overview_processor/generic.dockerfile
  #  restart: on-failure
  #  depends_on:
  #    rabbitmq:
  #      condition: service_healthy
  #    average_budget:
  #      condition: service_started
  #    model_downloader:
  #      condition: service_completed_successfully
  #  environment:
  #  - PYTHONUNBUFFERED=1
  #  - BINDS=5,6,7,8,9
  #  - NODE_ID=overview_2
  #  - CONSUMER_EXCHANGE=gateway_metadata
  #  - PUBLISHER_EXCHANGE=overview
  #  links:
  #  - rabbitmq
  #  volumes:
  #  - ./model_downloader/model_volume:/models
  #  healthcheck:
  #    test:
  #    - CMD
  #    - test
  #    - -f
  #    - /tmp/model_ready
  #    interval: 5s
  #    timeout: 3s
  #    retries: 10
  #    start_period: 15s
  filter_argentina_1:
    build:
      context: .
      dockerfile: filter/filter_argentina/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter_years_2000_q34_1:
        condition: service_started
      filter_years_2000_q34_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=filter_argentina_1
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_argentina
  filter_argentina_2:
    build:
      context: .
      dockerfile: filter/filter_argentina/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter_years_2000_q34_1:
        condition: service_started
      filter_years_2000_q34_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=filter_argentina_2
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_argentina
  filter_years_2000_q34_1:
    build:
      context: .
      dockerfile: filter/filter_years_2000_q34/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      join_ratings_1:
        condition: service_started
      join_ratings_2:
        condition: service_started
      join_credits_1:
        condition: service_started
      join_credits_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=filter_years_2000_q34_1
    - CONSUMER_EXCHANGE=filter_argentina
    - PUBLISHER_EXCHANGE=filter_years_2000_q34
  filter_years_2000_q34_2:
    build:
      context: .
      dockerfile: filter/filter_years_2000_q34/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      join_ratings_1:
        condition: service_started
      join_ratings_2:
        condition: service_started
      join_credits_1:
        condition: service_started
      join_credits_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=filter_years_2000_q34_2
    - CONSUMER_EXCHANGE=filter_argentina
    - PUBLISHER_EXCHANGE=filter_years_2000_q34
  join_ratings_1:
    build:
      context: .
      dockerfile: join/join_ratings/join.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      top_rating:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=join_ratings_1
    - CONSUMER_EXCHANGE_METADATA=filter_years_2000_q34
    - CONSUMER_EXCHANGE_JOINED=gateway_ratings
    - PUBLISHER_EXCHANGE=join_ratings
  join_ratings_2:
    build:
      context: .
      dockerfile: join/join_ratings/join.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      top_rating:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=join_ratings_2
    - CONSUMER_EXCHANGE_METADATA=filter_years_2000_q34
    - CONSUMER_EXCHANGE_JOINED=gateway_ratings
    - PUBLISHER_EXCHANGE=join_ratings
  join_credits_1:
    build:
      context: .
      dockerfile: join/join_credits/join.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      top_actors:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=join_credits_1
    - CONSUMER_EXCHANGE_METADATA=filter_years_2000_q34
    - CONSUMER_EXCHANGE_JOINED=gateway_credits
    - PUBLISHER_EXCHANGE=join_credits
  join_credits_2:
    build:
      context: .
      dockerfile: join/join_credits/join.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      top_actors:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=join_credits_2
    - CONSUMER_EXCHANGE_METADATA=filter_years_2000_q34
    - CONSUMER_EXCHANGE_JOINED=gateway_credits
    - PUBLISHER_EXCHANGE=join_credits
  top_rating:
    build:
      context: .
      dockerfile: generic/top_rating/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4,5,6,7,8,9
    - CONSUMER_EXCHANGE=join_ratings
    - PUBLISHER_EXCHANGE=results
    - NODE_ID=top_rating
  top_actors:
    build:
      context: .
      dockerfile: generic/top_actors/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4,5,6,7,8,9
    - CONSUMER_EXCHANGE=join_credits
    - PUBLISHER_EXCHANGE=results
    - NODE_ID=top_actors