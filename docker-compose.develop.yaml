services:
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    ports:
    - 15672:15672
    healthcheck:
      test:
      - CMD
      - rabbitmqctl
      - status
      interval: 10s
      timeout: 5s
      retries: 5
  gateway:
    build:
      context: .
      dockerfile: gateway/gateway.dockerfile
    restart: on-failure
    environment:
    - PYTHONUNBUFFERED=1
    - EOF=2
    depends_on:
      filter_spain_argentina_1:
        condition: service_started
      filter_spain_argentina_2:
        condition: service_started
      #filter_one_prod_1:
      #  condition: service_started
      #filter_one_prod_2:
      #  condition: service_started
      #overview_1:
      #  condition: service_healthy
      #overview_2:
      #  condition: service_healthy
      rabbitmq:
        condition: service_healthy
  model_downloader:
    build:
      context: ./model_downloader
      dockerfile: model_downloader.dockerfile
    volumes:
    - ./model_downloader/model_volume:/models
  #average_budget:
  #  build:
  #    context: .
  #    dockerfile: generic/average_budget/generic.dockerfile
  #  restart: on-failure
  #  depends_on:
  #    rabbitmq:
  #      condition: service_healthy
  #  environment:
  #  - PYTHONUNBUFFERED=1
  #  - BINDS=0,1,2,3,4,5,6,7,8,9
  #  - CONSUMER_EXCHANGE=overview
  #  - PUBLISHER_EXCHANGE=results
  #  - NODE_ID=average_budget
  #  - CLIENT_COUNT=2
  #top_budget:
  #  build:
  #    context: .
  #    dockerfile: generic/top_budget/generic.dockerfile
  #  restart: on-failure
  #  depends_on:
  #    rabbitmq:
  #      condition: service_healthy
  #  environment:
  #  - PYTHONUNBUFFERED=1
  #  - BINDS=0,1,2,3,4,5,6,7,8,9
  #  - CONSUMER_EXCHANGE=filter_one_prod
  #  - PUBLISHER_EXCHANGE=results
  #  - NODE_ID=top_budget
  #  - CLIENT_COUNT=2
  client_1:
    build:
      context: .
      dockerfile: client/client.dockerfile
    depends_on:
      gateway:
        condition: service_started
    volumes:
    - ./client/files:/app/files
    environment:
    - PYTHONUNBUFFERED=1
    - ARCHIVO_MOVIES=movies_metadata.csv
    - ARCHIVO_RATINGS=vacio.csv
    - ARCHIVO_CREDITS=vacio.csv
  client_2:
    build:
      context: .
      dockerfile: client/client.dockerfile
    depends_on:
      gateway:
        condition: service_started
    volumes:
    - ./client/files:/app/files
    environment:
    - PYTHONUNBUFFERED=1
    - ARCHIVO_MOVIES=movies1000.csv
    - ARCHIVO_RATINGS=vacio.csv
    - ARCHIVO_CREDITS=vacio.csv
  filter_spain_argentina_1:
    build:
      context: .
      dockerfile: filter/filter_spain_argentina/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter_years_2000_q1_1:
        condition: service_started
      filter_years_2000_q1_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=filter_spain_argentina_1
    - CLIENT_COUNT=2
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_spain_argentina
  filter_spain_argentina_2:
    build:
      context: .
      dockerfile: filter/filter_spain_argentina/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter_years_2000_q1_1:
        condition: service_started
      filter_years_2000_q1_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=filter_spain_argentina_2
    - CLIENT_COUNT=2
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_spain_argentina
  filter_years_2000_q1_1:
    build:
      context: .
      dockerfile: filter/filter_years_2000_q1/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=filter_years_2000_q1_1
    - CLIENT_COUNT=2
    - CONSUMER_EXCHANGE=filter_spain_argentina
    - PUBLISHER_EXCHANGE=results
  filter_years_2000_q1_2:
    build:
      context: .
      dockerfile: filter/filter_years_2000_q1/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=filter_years_2000_q1_2
    - CLIENT_COUNT=2
    - CONSUMER_EXCHANGE=filter_spain_argentina
    - PUBLISHER_EXCHANGE=results
  #filter_one_prod_1:
  #  build:
  #    context: .
  #    dockerfile: filter/filter_one_prod/filter.dockerfile
  #  restart: on-failure
  #  depends_on:
  #    rabbitmq:
  #      condition: service_healthy
  #    top_budget:
  #      condition: service_started
  #  environment:
  #  - PYTHONUNBUFFERED=1
  #  - BINDS=0,1,2,3,4
  #  - NODE_ID=filter_one_prod_1
  #  - CLIENT_COUNT=2
  #  - CONSUMER_EXCHANGE=gateway_metadata
  #  - PUBLISHER_EXCHANGE=filter_one_prod
  #filter_one_prod_2:
  #  build:
  #    context: .
  #    dockerfile: filter/filter_one_prod/filter.dockerfile
  #  restart: on-failure
  #  depends_on:
  #    rabbitmq:
  #      condition: service_healthy
  #    top_budget:
  #      condition: service_started
  #  environment:
  #  - PYTHONUNBUFFERED=1
  #  - BINDS=5,6,7,8,9
  #  - NODE_ID=filter_one_prod_2
  #  - CLIENT_COUNT=2
  #  - CONSUMER_EXCHANGE=gateway_metadata
  #  - PUBLISHER_EXCHANGE=filter_one_prod
  ##overview_1:
  ##  build:
  #    context: .
  #    dockerfile: generic/overview_processor/generic.dockerfile
  #  restart: on-failure
  #  depends_on:
  #    rabbitmq:
  #      condition: service_healthy
  #    average_budget:
  #      condition: service_started
  #    model_downloader:
  #      condition: service_completed_successfully
  #  environment:
  #  - PYTHONUNBUFFERED=1
  #  - BINDS=0,1,2,3,4
  #  - NODE_ID=overview_1
  #  - CLIENT_COUNT=2
  #  - CONSUMER_EXCHANGE=gateway_metadata
  #  - PUBLISHER_EXCHANGE=overview
  #  links:
  #  - rabbitmq
  #  volumes:
  #  - ./model_downloader/model_volume:/models
  #  healthcheck:
  #    test:
  #    - CMD
  #    - test
  #    - -f
  #    - /tmp/model_ready
  #    interval: 5s
  #    timeout: 3s
  #    retries: 10
  #    start_period: 15s
  #overview_2:
  #  build:
  #    context: .
  #    dockerfile: generic/overview_processor/generic.dockerfile
  #  restart: on-failure
  #  depends_on:
  #    rabbitmq:
  #      condition: service_healthy
  #    average_budget:
  #      condition: service_started
  #    model_downloader:
  #      condition: service_completed_successfully
  #  environment:
  #  - PYTHONUNBUFFERED=1
  #  - BINDS=5,6,7,8,9
  #  - NODE_ID=overview_2
  #  - CLIENT_COUNT=2
  #  - CONSUMER_EXCHANGE=gateway_metadata
  #  - PUBLISHER_EXCHANGE=overview
  #  links:
  #  - rabbitmq
  #  volumes:
  #  - ./model_downloader/model_volume:/models
  #  healthcheck:
  #    test:
  #    - CMD
  #    - test
  #    - -f
  #    - /tmp/model_ready
  #    interval: 5s
  #    timeout: 3s
  #    retries: 10
  #    start_period: 15s
  