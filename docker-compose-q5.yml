services: 
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    ports:
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  gateway:
    build:
      context: .
      dockerfile: gateway/gateway.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      overview_1:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./movies_metadata.csv:/app/movies_metadata.csv
      - ./ratings_39999_lines.csv:/app/ratings.csv
      - ./credits.csv:/app/credits.csv

  model_downloader:
    build:
      context: ./model_downloader
      dockerfile: model_downloader.dockerfile
    volumes:
      - ./model_downloader/model_volume:/models

  overview_1:
    build:
      context: .
      dockerfile: generic/overview_processor/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      model_downloader:
        condition: service_completed_successfully
      average_budget:
        condition: service_started
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - BINDS=0,1,2,3,4,5,6,7,8,9
      - CONSUMER_EXCHANGE=gateway_metadata
      - PUBLISHER_EXCHANGE=overview
    volumes:
      - ./model_downloader/model_volume:/models
    healthcheck:
      test: ["CMD", "test", "-f", "/tmp/model_ready"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 15s

  average_budget:
    build:
      context: .
      dockerfile: generic/average_budget/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - BINDS=0,1,2,3,4,5,6,7,8,9
      - CONSUMER_EXCHANGE=overview
      - PUBLISHER_EXCHANGE=results