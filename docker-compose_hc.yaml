services:
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    ports:
    - 15672:15672
    healthcheck:
      test:
      - CMD
      - rabbitmqctl
      - status
      interval: 10s
      timeout: 5s
      retries: 5

  health_checker_1:
    build:
      context: .
      dockerfile: health_checker/health_checker.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - PORT=8000
    - ID=1
    - HC_SIZE=3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  health_checker_2:
    build:
      context: .
      dockerfile: health_checker/health_checker.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - PORT=8000
    - ID=2
    - HC_SIZE=3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  health_checker_3:
    build:
      context: .
      dockerfile: health_checker/health_checker.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - PORT=8000
    - ID=3
    - HC_SIZE=3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    
  gateway:
    build:
      context: .
      dockerfile: gateway/gateway.dockerfile
    restart: on-failure
    environment:
    - PYTHONUNBUFFERED=1
    - EOF=6
    depends_on:
      filter_spain_argentina_1:
        condition: service_started
      filter_spain_argentina_2:
        condition: service_started
      filter_one_prod_1:
        condition: service_started
      filter_one_prod_2:
        condition: service_started
      filter_argentina_1:
        condition: service_started
      filter_argentina_2:
        condition: service_started
      filter_years_2000_q34_1:
        condition: service_started
      filter_years_2000_q34_2:
        condition: service_started
      join_ratings_1:
        condition: service_started
      join_ratings_2:
        condition: service_started
      join_credits_1:
        condition: service_started
      join_credits_2:
        condition: service_started
      overview_1:
        condition: service_healthy
      overview_2:
        condition: service_healthy
      top_budget_1:
        condition: service_started
      top_budget_2:
        condition: service_started
      top_rating_1:
        condition: service_started
      top_rating_2:
        condition: service_started
      top_actors_1:
        condition: service_started
      top_actors_2:
        condition: service_started
      average_budget_1:
        condition: service_started
      average_budget_2:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  model_downloader:
    build:
      context: ./model_downloader
      dockerfile: model_downloader.dockerfile
    volumes:
    - ./model_downloader/model_volume:/models
  aggregator_q2:
    build:
      context: .
      dockerfile: generic/aggregator_q2/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4,5,6,7,8,9
    - CONSUMER_EXCHANGE=top_budget
    - PUBLISHER_EXCHANGE=results
    - NODE_ID=aggregator_q2
    - HEALTH_CHECK_ID=1
  aggregator_q3:
    build:
      context: .
      dockerfile: generic/aggregator_q3/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4,5,6,7,8,9
    - CONSUMER_EXCHANGE=top_rating
    - PUBLISHER_EXCHANGE=results
    - NODE_ID=aggregator_q3
    - HEALTH_CHECK_ID=2
  aggregator_q4:
    build:
      context: .
      dockerfile: generic/aggregator_q4/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4,5,6,7,8,9
    - CONSUMER_EXCHANGE=top_actors
    - PUBLISHER_EXCHANGE=results
    - NODE_ID=aggregator_q4
    - HEALTH_CHECK_ID=3
  aggregator_q5:
    build:
      context: .
      dockerfile: generic/aggregator_q5/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4,5,6,7,8,9
    - CONSUMER_EXCHANGE=average_budget
    - PUBLISHER_EXCHANGE=results
    - NODE_ID=aggregator_q5
    - HEALTH_CHECK_ID=1
  client_1:
    build:
      context: .
      dockerfile: client/client.dockerfile
    depends_on:
      gateway:
        condition: service_started
    volumes:
    - ./client/files:/app/files
    environment:
    - PYTHONUNBUFFERED=1
    - MOVIES_FILE=movies_metadata.csv
    - RATINGS_FILE=ratings.csv
    - CREDITS_FILE=credits.csv
  filter_spain_argentina_1:
    build:
      context: .
      dockerfile: filter/filter_spain_argentina/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter_years_2000_q1_1:
        condition: service_started
      filter_years_2000_q1_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=filter_spain_argentina_1
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_spain_argentina
    - HEALTH_CHECK_ID=2
  filter_spain_argentina_2:
    build:
      context: .
      dockerfile: filter/filter_spain_argentina/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter_years_2000_q1_1:
        condition: service_started
      filter_years_2000_q1_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=filter_spain_argentina_2
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_spain_argentina
    - HEALTH_CHECK_ID=3
  filter_years_2000_q1_1:
    build:
      context: .
      dockerfile: filter/filter_years_2000_q1/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=filter_years_2000_q1_1
    - CONSUMER_EXCHANGE=filter_spain_argentina
    - PUBLISHER_EXCHANGE=results
    - HEALTH_CHECK_ID=1
  filter_years_2000_q1_2:
    build:
      context: .
      dockerfile: filter/filter_years_2000_q1/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=filter_years_2000_q1_2
    - CONSUMER_EXCHANGE=filter_spain_argentina
    - PUBLISHER_EXCHANGE=results
    - HEALTH_CHECK_ID=2
  filter_one_prod_1:
    build:
      context: .
      dockerfile: filter/filter_one_prod/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      top_budget_1:
        condition: service_started
      top_budget_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=filter_one_prod_1
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_one_prod
    - HEALTH_CHECK_ID=3
  filter_one_prod_2:
    build:
      context: .
      dockerfile: filter/filter_one_prod/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      top_budget_1:
        condition: service_started
      top_budget_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=filter_one_prod_2
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_one_prod
    - HEALTH_CHECK_ID=1
  filter_argentina_1:
    build:
      context: .
      dockerfile: filter/filter_argentina/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter_years_2000_q34_1:
        condition: service_started
      filter_years_2000_q34_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=filter_argentina_1
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_argentina
    - HEALTH_CHECK_ID=2
  filter_argentina_2:
    build:
      context: .
      dockerfile: filter/filter_argentina/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      filter_years_2000_q34_1:
        condition: service_started
      filter_years_2000_q34_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=filter_argentina_2
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=filter_argentina
    - HEALTH_CHECK_ID=3
  filter_years_2000_q34_1:
    build:
      context: .
      dockerfile: filter/filter_years_2000_q34/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      join_ratings_1:
        condition: service_started
      join_ratings_2:
        condition: service_started
      join_credits_1:
        condition: service_started
      join_credits_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=filter_years_2000_q34_1
    - CONSUMER_EXCHANGE=filter_argentina
    - PUBLISHER_EXCHANGE=filter_years_2000_q34
    - HEALTH_CHECK_ID=1
  filter_years_2000_q34_2:
    build:
      context: .
      dockerfile: filter/filter_years_2000_q34/filter.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      join_ratings_1:
        condition: service_started
      join_ratings_2:
        condition: service_started
      join_credits_1:
        condition: service_started
      join_credits_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=filter_years_2000_q34_2
    - CONSUMER_EXCHANGE=filter_argentina
    - PUBLISHER_EXCHANGE=filter_years_2000_q34
    - HEALTH_CHECK_ID=2
  join_ratings_1:
    build:
      context: .
      dockerfile: join/join_ratings/join.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      top_rating_1:
        condition: service_started
      top_rating_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=join_ratings_1
    - CONSUMER_EXCHANGE_METADATA=filter_years_2000_q34
    - CONSUMER_EXCHANGE_JOINED=gateway_ratings
    - PUBLISHER_EXCHANGE=join_ratings
    - HEALTH_CHECK_ID=3
  join_ratings_2:
    build:
      context: .
      dockerfile: join/join_ratings/join.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      top_rating_1:
        condition: service_started
      top_rating_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=join_ratings_2
    - CONSUMER_EXCHANGE_METADATA=filter_years_2000_q34
    - CONSUMER_EXCHANGE_JOINED=gateway_ratings
    - PUBLISHER_EXCHANGE=join_ratings
    - HEALTH_CHECK_ID=1
  join_credits_1:
    build:
      context: .
      dockerfile: join/join_credits/join.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      top_actors_1:
        condition: service_started
      top_actors_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=join_credits_1
    - CONSUMER_EXCHANGE_METADATA=filter_years_2000_q34
    - CONSUMER_EXCHANGE_JOINED=gateway_credits
    - PUBLISHER_EXCHANGE=join_credits
    - HEALTH_CHECK_ID=2
  join_credits_2:
    build:
      context: .
      dockerfile: join/join_credits/join.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      top_actors_1:
        condition: service_started
      top_actors_2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=join_credits_2
    - CONSUMER_EXCHANGE_METADATA=filter_years_2000_q34
    - CONSUMER_EXCHANGE_JOINED=gateway_credits
    - PUBLISHER_EXCHANGE=join_credits
    - HEALTH_CHECK_ID=3
  overview_1:
    build:
      context: .
      dockerfile: generic/overview_processor/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      average_budget_1:
        condition: service_started
      average_budget_2:
        condition: service_started
      model_downloader:
        condition: service_completed_successfully
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=overview_1
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=overview
    - HEALTH_CHECK_ID=1
    links:
    - rabbitmq
    volumes:
    - ./model_downloader/model_volume:/models
    healthcheck:
      test:
      - CMD
      - test
      - -f
      - /tmp/model_ready
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 15s
  overview_2:
    build:
      context: .
      dockerfile: generic/overview_processor/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      average_budget_1:
        condition: service_started
      average_budget_2:
        condition: service_started
      model_downloader:
        condition: service_completed_successfully
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=overview_2
    - CONSUMER_EXCHANGE=gateway_metadata
    - PUBLISHER_EXCHANGE=overview
    - HEALTH_CHECK_ID=2
    links:
    - rabbitmq
    volumes:
    - ./model_downloader/model_volume:/models
    healthcheck:
      test:
      - CMD
      - test
      - -f
      - /tmp/model_ready
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 15s
  top_budget_1:
    build:
      context: .
      dockerfile: generic/top_budget/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      aggregator_q2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4,-1
    - NODE_ID=top_budget_1
    - EOF=2
    - CONSUMER_EXCHANGE=filter_one_prod
    - PUBLISHER_EXCHANGE=top_budget
    - HEALTH_CHECK_ID=3
  top_budget_2:
    build:
      context: .
      dockerfile: generic/top_budget/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      aggregator_q2:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9,-1
    - NODE_ID=top_budget_2
    - EOF=2
    - CONSUMER_EXCHANGE=filter_one_prod
    - PUBLISHER_EXCHANGE=top_budget
    - HEALTH_CHECK_ID=1
  top_rating_1:
    build:
      context: .
      dockerfile: generic/top_rating/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      aggregator_q3:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=top_rating_1
    - CONSUMER_EXCHANGE=join_ratings
    - PUBLISHER_EXCHANGE=top_rating
    - HEALTH_CHECK_ID=2
  top_rating_2:
    build:
      context: .
      dockerfile: generic/top_rating/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      aggregator_q3:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=top_rating_2
    - CONSUMER_EXCHANGE=join_ratings
    - PUBLISHER_EXCHANGE=top_rating
    - HEALTH_CHECK_ID=3
  top_actors_1:
    build:
      context: .
      dockerfile: generic/top_actors/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      aggregator_q4:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=top_actors_1
    - CONSUMER_EXCHANGE=join_credits
    - PUBLISHER_EXCHANGE=top_actors
    - HEALTH_CHECK_ID=1
  top_actors_2:
    build:
      context: .
      dockerfile: generic/top_actors/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      aggregator_q4:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=top_actors_2
    - CONSUMER_EXCHANGE=join_credits
    - PUBLISHER_EXCHANGE=top_actors
    - HEALTH_CHECK_ID=2
  average_budget_1:
    build:
      context: .
      dockerfile: generic/average_budget/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      aggregator_q5:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=0,1,2,3,4
    - NODE_ID=average_budget_1
    - CONSUMER_EXCHANGE=overview
    - PUBLISHER_EXCHANGE=average_budget
    - HEALTH_CHECK_ID=3
  average_budget_2:
    build:
      context: .
      dockerfile: generic/average_budget/generic.dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      aggregator_q5:
        condition: service_started
    environment:
    - PYTHONUNBUFFERED=1
    - BINDS=5,6,7,8,9
    - NODE_ID=average_budget_2
    - CONSUMER_EXCHANGE=overview
    - PUBLISHER_EXCHANGE=average_budget
    - HEALTH_CHECK_ID=1
